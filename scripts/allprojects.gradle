def root = rootProject
allprojects {
    plugins.apply('java')
    plugins.apply('idea')
    plugins.apply('eclipse')
    plugins.apply('java-library')
    plugins.apply('maven-publish')
    plugins.apply("com.jfrog.bintray")
    plugins.apply("fabric-loom")

    group "io.github.astrarre"
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    minecraft {
    }

    sourceSets {
        testmod {
            compileClasspath += main.compileClasspath
            runtimeClasspath += main.runtimeClasspath
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/' }
        maven { url 'https://maven.fabricmc.net/' }
        maven { url 'http://maven.modmuss50.me/' }
        maven { url 'https://dl.bintray.com/astrarre/maven' }
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${root.minecraft_version}"
        mappings "net.fabricmc:yarn:${root.yarn_mappings}:v2"
        modImplementation "net.fabricmc:fabric-loader:${root.loader_version}"
        // keep track of incompatibilities
        modImplementation "net.fabricmc.fabric-api:fabric-api:${root.fabric_version}"
        compileOnly("io.github.astrarre:astrarre-stripper:1.1.4") {
            transitive = false
        }

        testImplementation 'junit:junit:4.13.1'
    }

    jar {
        from "$root.projectDir/LICENSE"
    }



    task sourcesJar(type: Jar) {
        group = "astrarre"
        archiveClassifier = "sources"
        from sourceSets.main.allSource
    }

    afterEvaluate {
        processResources {
            inputs.property "version", project.version

            from(sourceSets.main.resources.srcDirs) {
                include "fabric.mod.json"
                expand "version": project.version
            }

            from(sourceSets.main.resources.srcDirs) {
                exclude "fabric.mod.json"
            }
        }
    }
}