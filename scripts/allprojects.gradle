allprojects {
    group = 'io.github.astrarre'
    if (project != rootProject) {
        plugins.apply 'java'
        plugins.apply 'idea'
        plugins.apply 'eclipse'
        plugins.apply 'java-library'
        plugins.apply 'maven-publish'
        plugins.apply "fabric-loom"
    }

    minecraft {}

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/' }
        maven { url 'https://maven.fabricmc.net/' }
        maven { url 'http://maven.modmuss50.me/' }
        maven { url 'https://dl.bintray.com/astrarre/maven' }
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.legacyfabric.net/' }
        maven { url "https://maven.shedaniel.me/" }
    }

    sourceSets {
        testmod {
            compileClasspath += sourceSets.main.compileClasspath
            runtimeClasspath += sourceSets.main.runtimeClasspath
        }
    }

    jar {
        from "$rootProject.projectDir/LICENSE"
    }

    dependencies {
        minecraft "com.mojang:minecraft:${minecraft_version}"
        mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
        modImplementation "net.fabricmc:fabric-loader:${loader_version}"
        testImplementation 'junit:junit:4.13.1'
        testImplementation 'net.devtech:PotatoUnit:1.0.2'
        testmodCompile sourceSets.main.output
        testmodImplementation('com.github.astei:lazydfu:0.1.1') {
            exclude module: 'fabric-loader'
        }

    }

    processResources {
        inputs.property "version", project.version
        from(sourceSets.main.resources.srcDirs) {
            include "fabric.mod.json"
            expand "version": project.version
        }

        from(sourceSets.main.resources.srcDirs) {
            exclude "fabric.mod.json"
        }
    }

    task sourcesJar(type: Jar) {
        group = "astrarre"
        archiveClassifier = "sources"
        from sourceSets.main.allSource
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = "$project.name-fabric"
                // regular old implementation jar
                artifact(remapJar) {
                    builtBy remapJar
                }

                // sources for ye normal folk
                artifact(sourcesJar) {
                    builtBy remapSourcesJar
                }
            }
        }

        repositories {
            maven {
                url project.hasProperty('maven_url') ? project.property('maven_url') : ""
                credentials {
                    username project.hasProperty('maven_username') ? project.property('maven_username') : ""
                    password project.hasProperty('maven_password') ? project.property('maven_password') : ""
                }
            }
        }
    }
}